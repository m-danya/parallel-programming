import numpy as np
from numpy.core.fromnumeric import size
import seaborn as sns
import matplotlib.pylab as plt

ns_openmp = [258, 322, 387, 451, 516]
threads_openmp = [1, 2, 4, 8, 16, 32, 64, 128, 160]

ns_mpi = [150, 225, 300]
threads_mpi = [1, 2, 4, 8, 16, 32, 64, 128]

ns = ns_mpi
threads = threads_mpi

def get_mean(a, b, c):
    return [sum(x) / 3 for x in zip(a, b, c)]

a_openmp = np.array(
    [
        get_mean(
            [27.670847,  13.852456,  6.964875,  3.532431,  3.139214,  2.152456,  1.872661,  2.354389,  1.559723],
            [27.660329,  13.835315,  6.924896,  3.516151,  3.120239,  2.135128,  1.845566,  1.952521,  1.56041],
            [27.671644,  13.841356,  7.011839,  3.549605,  3.150844,  2.156188,  1.857786,  1.956411,  1.563368]
        ), # n = 258
        get_mean(
            [61.82912, 30.914225, 15.467515, 7.83119, 6.560074, 4.668249, 4.183624, 4.65936,  3.470628],
            [62.712168, 30.913989, 15.53933, 7.893241, 6.592604, 4.702449, 4.204172,  4.672452, 4.136436],
            [61.824278, 30.913926, 15.594612, 7.885685, 6.642314, 4.712896, 4.211485,  4.707778, 3.516103]
        ), # n = 258 * 1.25 = 322
        get_mean(
            [110.788231, 55.425911, 28.019079, 14.18058, 11.523321, 8.327255, 7.73674,  8.258957, 6.366061],
            [110.784091, 55.425384, 28.070709, 14.196745, 11.526072, 8.329662, 7.746638,  8.246078, 6.999191],
            [110.784048, 55.429333, 27.953605, 14.123431, 11.525364, 8.333582, 7.741371,  8.310099, 6.373871]
        ), # n = 258 * 1.5 = 387
        get_mean(
            [176.975971, 88.542777, 44.678818, 22.608475, 18.408203, 13.226236, 12.415363,  13.783443, 10.34339],
            [176.983089, 88.54314, 44.57447, 22.613705, 18.36139, 13.197298, 12.411423,  13.297641, 11.157671],
            [177.043183, 88.544075, 44.696483, 22.594407, 18.435831, 13.221373, 12.398066,  13.215562, 10.901174]
        ), # n = 258 * 1.75 = 451
        get_mean(
            [255.892542, 127.995397, 64.786803, 32.718683, 27.128298, 19.684757, 17.409123,  18.803107, 14.484535],
            [255.738755, 127.975716, 64.605852, 32.682667, 27.144641, 19.712337, 17.494164,  18.686556, 14.701164],
            [255.838198, 127.968591, 64.524189, 32.640956, 27.050918, 19.705101, 17.50805,  19.022156, 15.583186]
        ), # n = 258 * 2 = 516

        # при n = 645 таймаут — требуется больше 15 минут для вычисления
    ]
)

# 1, 2, 4, 8, 16, 32, 64, 128

a_mpi = np.array([
    [105.398943, 76.992666, 63.019277, 57.555359, 55.143400, 61.575187, 65.419231, 74.311368], # n = 150
    [364.431234, 267.064816, 220.173482, 200.190208, 197.149841, 209.905770, 217.566484, 291.561302], # n = 225
    [864.159344, 632.398581, 520.004334, 464.773980, 451.487309, 446.078071, 505.900396, 539.413662], # n = 300
])

a = a_mpi

a = np.log(a)

fig, ax = plt.subplots(figsize=(10, 7))
ax = sns.heatmap(a, linewidth=0.5, \
    xticklabels=threads,
    yticklabels=ns,
    cmap='Blues',
    cbar_kws={'label': 'Прологарифмированное число секунд'},
    ax=ax,
    annot=True
)
ax.set_title('Зависимость времени работы программы от N и количества процессов')
ax.set_xlabel('Количество процессов')
ax.set_ylabel('N')
ax.invert_yaxis()
fig.savefig('graphic.png')
plt.show()